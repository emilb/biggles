<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>se.cygni</groupId>
    <artifactId>biggles-web</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Biggles Web</name>
    <url>http://github.com/emilb/biggles</url>

    <developers>
        <developer>
            <id>emil</id>
            <name>Emil Breding</name>
            <email>emil.breding@cygni.com</email>
            <timezone>+1</timezone>
            <roles>
                <role>Developer</role>
                <role>Architect</role>
            </roles>
        </developer>
    </developers>

    <prerequisites>
        <maven>3.2</maven>
    </prerequisites>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <version>${phantomjs-maven-plugin.version}</version>
                <executions>
                  <execution>
                    <goals>
                      <goal>install</goal>
                    </goals>
                  </execution>
                </executions>
                <configuration>
                  <version>1.9.2</version>
                </configuration>
              </plugin>

            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <version>1.3.1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <autoRefreshInterval>1</autoRefreshInterval>
                    <jsSrcDir>src/main/webapp/resources/js</jsSrcDir>
                    <haltOnFailure>false</haltOnFailure>
                    <sourceIncludes>
                        <include>**/*.js</include>
                    </sourceIncludes>
                    <sourceExcludes>
                        <!-- exclude app.min.js which is only a placeholder for minified scripts -->
                        <exclude>**/app.min.js</exclude>
                    </sourceExcludes>
                    <!-- Explicit preload to make sure scripts are loaded in correct order -->
                    <preloadSources>
                        <preloadSource>src/main/webapp/resources/js/lib/jquery-2.1.1.min.js</preloadSource>
                        <preloadSource>src/main/webapp/resources/js/lib/angular-1.0.8.min.js</preloadSource>
                    </preloadSources>
                    <jsTestSrcDir>src/test/javascript/</jsTestSrcDir>
                    <haltOnFailure>true</haltOnFailure>
                    <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
                    <webDriverCapabilities>
                      <capability>
                        <name>phantomjs.binary.path</name>
                        <value>${phantomjs.binary}</value>
                      </capability>
                    </webDriverCapabilities>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/*.html</include>
                                <!-- include any other file types you want to filter -->
                            </includes>
                        </resource>
                    </webResources>
                    <warSourceExcludes>resources/js/app.min.js,resources/css/style.min.css</warSourceExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                        <version>${logback.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-access</artifactId>
                        <version>${logback.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                        <version>${slf4j.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <httpConnector>
                        <port>${integration.test.port}</port>
                    </httpConnector>
                    <scanIntervalSeconds>0</scanIntervalSeconds>
                    <stopPort>9966</stopPort>
                    <stopKey>foo</stopKey>
                    <stopWait>10</stopWait>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <systemProperties>
                        <systemProperty>
                            <name>org.eclipse.jetty.util.log.Log</name>
                            <value>org.eclipse.jetty.util.log.Slf4jLog</value>
                        </systemProperty>
                        <systemProperty>
                            <name>logback.configurationFile</name>
                            <value>src/main/resources/logback.xml</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <daemon>true</daemon>
                            <reload>automatic</reload>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- Logging during JUnit tests aren't necessary and the initialization of
                         slf4j takes approx 250ms. Removing impl dependency for logging and keeping
                         slj4j-nop instead. -->
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>ch.qos.logback:logback-classic</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <includes>
                        <include>*Spec.*</include>
                    </includes>
                    <systemPropertyVariables>
                        <geb.build.baseUrl>http://localhost:9080</geb.build.baseUrl>
                        <geb.build.reportsDir>target/test-reports/geb</geb.build.reportsDir>
                    </systemPropertyVariables>
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>ch.qos.logback:logback-classic</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <providerSelection>2.0</providerSelection>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.samaxes.maven</groupId>
                <artifactId>minify-maven-plugin</artifactId>
                <version>1.7.2</version>
                <executions>
                    <execution>
                        <id>default-minify</id>
                        <!-- When omitted defaults to <phase>process-resources</phase> -->
                        <phase>prepare-package</phase>
                        <configuration>
                            <charset>UTF-8</charset>
                            <cssSourceDir>resources/css</cssSourceDir>
                            <cssSourceFiles>
                                <cssSourceFile>bootstrap-3.0.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>style.css</cssFinalFile>
                            <jsSourceDir>resources/js</jsSourceDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/angular-1.0.8.min.js</jsSourceFile>
                                <jsSourceFile>lib/ui-bootstrap-tpls-0.6.0-SNAPSHOT.min.js</jsSourceFile>
                                <jsSourceFile>BigglesControllers.js</jsSourceFile>
                                <jsSourceFile>BigglesApp.js</jsSourceFile>
                                <jsSourceFile>lib/jquery-2.0.3.min.js</jsSourceFile>
                                <jsSourceFile>lib/bootstrap-3.0.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>app.js</jsFinalFile>
                            <jsEngine>CLOSURE</jsEngine>
                        </configuration>
                        <goals>
                            <goal>minify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.springframework.version>4.0.4.RELEASE</org.springframework.version>
        <slf4j.version>1.7.7</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <jackson.version>1.9.11</jackson.version>
        <selenium.version>2.41.0</selenium.version>
        <jetty.version>9.1.5.v20140505</jetty.version>
        <phantomjs-maven-plugin.version>0.3</phantomjs-maven-plugin.version>
        <targetJdk>1.7</targetJdk>
        <integration.test.port>9080</integration.test.port>
    </properties>

    <dependencies>
        <!--We need servlet API for compiling the classes. Not needed in runtime -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!--adding spring mvc is easy -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Required for xml-less configuration of Spring via @Configuration annotations -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- spring jdbc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- json lib -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>

        <!-- DB connection pooling for production applications -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.178</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.slugify</groupId>
            <artifactId>slugify</artifactId>
            <version>2.1.2</version>
        </dependency>

        <!-- Logging (SLF4J and Logback) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>0.7-groovy-2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.gebish</groupId>
            <artifactId>geb-spock</artifactId>
            <version>0.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-support</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-htmlunit-driver</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.detro.ghostdriver</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>1.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
